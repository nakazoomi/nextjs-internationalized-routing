"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasHOC = exports.isPageToIgnore = exports.hasExportName = exports.overwriteLoadLocales = exports.getDefaultAppJs = exports.defaultLoader = exports.clearCommentsRgx = void 0;
var specFileOrFolderRgx = /(__mocks__|__tests__)|(\.(spec|test)\.(tsx|ts|js|jsx)$)/;
exports.clearCommentsRgx = /\/\*[\s\S]*?\*\/|\/\/.*/g;
exports.defaultLoader = '(l, n) => import(`' +
    process.cwd() +
    '/locales/${l}/${n}`).then(m => m.default)';
function getDefaultAppJs(hasLoadLocaleFrom) {
    return "\n  import i18nConfig from '" + (process.cwd() + '/i18n') + "'\n  import appWithI18n from 'next-translate/appWithI18n'\n\n  function MyApp({ Component, pageProps }) {\n    return <Component {...pageProps} />\n  }\n\n  export default appWithI18n(MyApp, {\n    ...i18nConfig,\n    skipInitialProps: true,\n    isLoader: true,\n    " + overwriteLoadLocales(hasLoadLocaleFrom) + "\n  })\n";
}
exports.getDefaultAppJs = getDefaultAppJs;
function overwriteLoadLocales(exist) {
    if (exist)
        return '';
    return "loadLocaleFrom: " + exports.defaultLoader + ",";
}
exports.overwriteLoadLocales = overwriteLoadLocales;
function hasExportName(data, name) {
    return Boolean(data.match(new RegExp("export +(const|var|let|async +function|function) +" + name)) ||
        data.match(new RegExp("export\\s*\\{[^}]*(?<!\\w)" + name + "(?!\\w)[^}]*\\}", 'm')));
}
exports.hasExportName = hasExportName;
function isPageToIgnore(page) {
    return Boolean(page.startsWith('/api/') ||
        page.startsWith('/_document.') ||
        page.match(specFileOrFolderRgx));
}
exports.isPageToIgnore = isPageToIgnore;
function hasHOC(rawData) {
    var hocRgx = new RegExp('[^\\(|\\| )]+\\([A-Z][^\\(|\\| )]*\\)');
    var hasWithTranslationHOC = new RegExp('import *(\\w*) *.*from *.*next-translate\\/withTranslation.*');
    if (!rawData.includes('export default'))
        return false;
    if (hasExportName(rawData, 'getStaticProps') ||
        hasExportName(rawData, 'getServerSideProps') ||
        hasExportName(rawData, 'getStaticPaths')) {
        return false;
    }
    var _a = rawData.match(hasWithTranslationHOC) || [], withTranslationName = _a[1];
    var data = rawData
        .replace(new RegExp(withTranslationName + "\\(.*\\)"), function (d) {
        return d.replace(new RegExp("(" + withTranslationName + "|\\(|\\))", 'g'), '');
    })
        .replace(exports.clearCommentsRgx, '');
    var exportedNormally = new RegExp("export default (\\(.*\\) *=>|function)").test(data);
    if (exportedNormally)
        return false;
    var ref = (data.replace(/ /g, '').match("exportdefault*([^\\n|;]*)") ||
        [])[1];
    if (hocRgx.test(ref))
        return true;
    return (data
        .split('/n')
        .filter(function (line) { return line.includes(ref); })
        .filter(function (line) { return hocRgx.test(line); }).length > 0);
}
exports.hasHOC = hasHOC;
